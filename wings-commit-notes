#!/usr/bin/perl -wi
use strict;

#
# Run tools/extract_notes and prepend the notes to the 
# latest NOTES-* file and commit the changes. If notes
# in the file already are up-to-date, nothing will be
# committed.
#
# By default, the generated notes will be preceded by
# --- (next version) ----- header. Use the -v<version>
# (e.g. -v1.1.15) to instead insert the version number
# for a release and to also create v<version> tag.
#

my $notes_written;
my $skip;

my $vsn = '(next version)';
my $file;
my $tag;

while (@ARGV && $ARGV[0] =~ /^-(.*)/) {
    my $opt = $1;
    if ($opt =~ /v(.*)/) {
	$vsn = $1;
	$tag = "v$vsn";
    } else {
	usage();
    }
    shift;
}

@ARGV == 0 or usage();

@ARGV = ("NOTES-1.1");
@ARGV = ("NOTES-1.0") unless -f $ARGV[0];

my $notes;
while (<>) {
    $file = $ARGV;
    unless ($notes_written) {
	print "--- $vsn ", "-" x (75-length($vsn)), "\n";
	$notes = `tools/extract_notes`;
	print $notes;
	$notes_written = 1;
	if (/^---\s+(.*)\s+---/) {
	    my $version = $1;
	    if ($version eq '(next version)' ||
		$version eq $vsn) {
		$skip = 1;
		$_ = '';
	    }
	}
    }
    print unless $skip;
    if ($skip && /^---\s*\d/) {
	$skip = 0;
	print;
    }
}
my $msg = 'Generate release notes';
$msg .= " for the $vsn release"
    unless $vsn =~ /\(/;

system "git commit -m '$msg' $file";

if (defined $tag) {
    my $msg = "The $vsn release\n\n" . $notes;
    system "git", "tag", "-a", "-m", $msg, $tag;
}

sub usage {
    die "usage: wings-commit-notes [-v<version>]\n";
}
